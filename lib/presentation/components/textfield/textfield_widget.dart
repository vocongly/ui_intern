import 'package:_textfield/_textfield.dart';
import 'package:flutter/material.dart';

class TextfieldWidget {
  static Widget common({
    required ValueChanged<String> onChanged,
    required String title,
    bool required = false,
    String? errorText,
    required String hintText,
    required TextStyle textStyle,
    required TextStyle hintStyle,
    TextStyle? errorStyle,
    required TextStyle titleStyle,
    required Color disableTextColor,
    required Color disableBackgroundColor,
    FocusNode? focusNode,
    Color? backgroundColor,
    TextInputAction? textInputAction,
    ValueChanged<String>? onSubmit,
    Color errorBorderColor = Colors.red,
    String? initialValue,
    bool isObscured = false,
    bool enable = true,
    EdgeInsets? contentPadding,
    BorderRadius? borderRadius,
    double? focusBorderWidth,
    Color focusBorderColor = Colors.green,
    TextEditingController? textEditingController,
    TextCapitalization textCapitalization = TextCapitalization.none,
    bool autoFocus = false,
    int? maxLength,
    int maxLines = 1,
    bool readOnly = false,
    TextAlign textAlign = TextAlign.start,
    TextAlignVertical textAlignVertical = TextAlignVertical.center,
    VoidCallback? onSuffixIconTap,
    VoidCallback? onPrefixIconTap,
    String? prefixIconPath,
    String? suffixIconPath,
    double? iconSize,
    Color? iconColor,
    Color textColor = Colors.black,
    List<BoxShadow>? shadow,
    TextInputType? textInputType,
  }) {
    return TextfieldBrick.common(
      onChanged: onChanged,
      required: required,
      title: title,
      errorText: errorText,
      textStyle: textStyle,
      hintStyle: hintStyle,
      errorStyle: errorStyle,
      titleStyle: titleStyle,
      disableTextColor: disableTextColor,
      disableBackgroundColor: disableBackgroundColor,
      onSubmit: onSubmit,
      hintText: hintText,
      errorBorderColor: errorBorderColor,
      initialValue: initialValue,
      isObscured: isObscured,
      enable: enable,
      contentPadding: contentPadding,
      focusNode: focusNode,
      borderRadius: borderRadius,
      focusBorderWidth: focusBorderWidth,
      focusBorderColor: focusBorderColor,
      textEditingController: textEditingController,
      textCapitalization: textCapitalization,
      autoFocus: autoFocus,
      maxLength: maxLength,
      maxLines: maxLines,
      backgroundColor: backgroundColor,
      readOnly: readOnly,
      textAlign: textAlign,
      textAlignVertical: textAlignVertical,
      textInputAction: textInputAction,
      onPrefixIconTap: onPrefixIconTap,
      onSuffixIconTap: onSuffixIconTap,
      prefixIconPath: prefixIconPath,
      suffixIconPath: suffixIconPath,
      iconColor: iconColor,
      textColor: textColor,
      iconSize: iconSize,
      shadow: shadow,
      textInputType: textInputType,
    );
  }
}
